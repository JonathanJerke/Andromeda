ANDROMEDA 1.0  RELEASED SEPTEMBER 10th 2018
ANDROMEDA 1.1  RELEASED SEPTEMBER 15th 2018
	Found bug in code used to build matrix -vector multiply.
	A line of canonicalMultiplyMP was missing.
	The impact of this line would be to make the multiply MORE ACCURATE.
	however the multiply only needs to be in ball-park to work approprately for Lanczos.  So this does not invalid eigensolves, however it will improve Lanczos Convergence rates.	
ANDROMEDA 1.1b RELEASED SEPTEMBER 18th 2018
	**Forgot to normalize a vector with respect to last upgrade. 
ANDROMEDA 1.2 RELEASED SEPTEMBER 19th 2018
	**Sorry about these updates, just a few lines of code that where put together too quickly as well as a lot of extra features.  
	Fixed bug in Harmonic build
	Fixed CORE NUMBER allocation problem
ANDROMEDA 1.2b RELEASED SEPTEMBER 20th 2018
	*bandStage was busted
	*add complex part to correlations.
ANDROMEDA 1.3 RELEASED SEPTEMBER 21st 2018
	*improved cycle-to-cycle handling for improved convergence
ANDROMEDA 1.4 RELEASED SEPTEMBER 25th 2018
	*Improved ALS handling procedures,
		more uniform implementation
		reduce wasteful running
		added code to handle linear dependent situations.
	*SA BP corrected my weights 

ANDROMEDA 1.5 RELEASED OCTOBER 5th 2018
	*Significantly improved the handing and boot up process.
		-by removing Symmetry Adaption from the Foundational build,
		one maintains balance of speed and good initial subspace.
					
ANDROMEDA 1.6 RELEASED October 24th 2018
	*Improved persistence of driving Lanczos in spite of Linear Dependence by Cycling the computation.
	*Various improvements to Symmetry Adaption including proper use of projections.
	*Still booting in unadapted subspace.
ANDROMEDA 1.7 RELEASED October 26th 2018
	*final testing completed. With Sinc substratum basis
ANDROMEDA 2.0 RELEASED October 29th 2018
	*serious improvements to SA
ANDROMEDA final	RELEASED December 2nd 2018
	*added another iteration mechanism.
	New mechanism can overcome previous issues with convergence of nearly solved systems by repeatedly cycling with step = 0.  ALL IO is perfect(which was also fixed, sorry!). 



	THE next program will be much better with more electrons!
Finis.